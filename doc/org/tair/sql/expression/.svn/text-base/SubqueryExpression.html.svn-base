<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_31) on Fri Apr 27 10:40:16 PDT 2012 -->
<TITLE>
SubqueryExpression
</TITLE>

<META NAME="date" CONTENT="2012-04-27">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="SubqueryExpression";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/SubqueryExpression.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/tair/sql/expression/StringSubqueryExpression.html" title="class in org.tair.sql.expression"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/tair/sql/expression/TimestampExpression.html" title="class in org.tair.sql.expression"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/tair/sql/expression/SubqueryExpression.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SubqueryExpression.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.tair.sql.expression</FONT>
<BR>
Class SubqueryExpression</H2>
<PRE>
java.lang.Object
  <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../../org/tair/sql/expression/Expression.html" title="class in org.tair.sql.expression">org.tair.sql.expression.Expression</A>
      <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><B>org.tair.sql.expression.SubqueryExpression</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD><A HREF="../../../../org/tair/sql/expression/IExpression.html" title="interface in org.tair.sql.expression">IExpression</A>, <A HREF="../../../../org/tair/sql/expression/ISubqueryExpression.html" title="interface in org.tair.sql.expression">ISubqueryExpression</A></DD>
</DL>
<DL>
<DT><B>Direct Known Subclasses:</B> <DD><A HREF="../../../../org/tair/sql/expression/ParameterizedSubqueryExpression.html" title="class in org.tair.sql.expression">ParameterizedSubqueryExpression</A>, <A HREF="../../../../org/tair/sql/expression/ScalarSubqueryExpression.html" title="class in org.tair.sql.expression">ScalarSubqueryExpression</A></DD>
</DL>
<HR>
<DL>
<DT><PRE>public class <B>SubqueryExpression</B><DT>extends <A HREF="../../../../org/tair/sql/expression/Expression.html" title="class in org.tair.sql.expression">Expression</A><DT>implements <A HREF="../../../../org/tair/sql/expression/ISubqueryExpression.html" title="interface in org.tair.sql.expression">ISubqueryExpression</A></DL>
</PRE>

<P>
An implementation of the ISubqueryExpression interface and a concrete
 subclass of the Expression class that represents a SQL expression that is a
 subquery. The methods let you build the subquery in parts. Use objects of
 this class for subqueries that return row data rather than a scalar value;
 use the subclasses for scalar-value subqueries.
<P>

<P>
<DL>
<DT><B>Author:</B></DT>
  <DD>Robert J. Muller</DD>
</DL>
<HR>

<P>
<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;<A HREF="../../../../org/tair/sql/table/TableReference.html" title="class in org.tair.sql.table">TableReference</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/tair/sql/expression/SubqueryExpression.html#from">from</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;the table reference that constitutes the FROM clause</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;java.util.List&lt;<A HREF="../../../../org/tair/sql/expression/IExpression.html" title="interface in org.tair.sql.expression">IExpression</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/tair/sql/expression/SubqueryExpression.html#select">select</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;the list of expressions in the SELECT list</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;<A HREF="../../../../org/tair/sql/predicate/Predicate.html" title="class in org.tair.sql.predicate">Predicate</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/tair/sql/expression/SubqueryExpression.html#where">where</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;the search condition that constitutes the WHERE clause</TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_org.tair.sql.expression.Expression"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Fields inherited from class org.tair.sql.expression.<A HREF="../../../../org/tair/sql/expression/Expression.html" title="class in org.tair.sql.expression">Expression</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/tair/sql/expression/Expression.html#expression">expression</A>, <A HREF="../../../../org/tair/sql/expression/Expression.html#lexicalVariables">lexicalVariables</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected </CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/tair/sql/expression/SubqueryExpression.html#SubqueryExpression()">SubqueryExpression</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Create a SubqueryExpression object.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/tair/sql/expression/SubqueryExpression.html#SubqueryExpression(org.tair.sql.expression.IExpression, java.lang.String)">SubqueryExpression</A></B>(<A HREF="../../../../org/tair/sql/expression/IExpression.html" title="interface in org.tair.sql.expression">IExpression</A>&nbsp;expression,
                   java.lang.String&nbsp;table)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Create a SubqueryExpression object with a single SELECT-list expression and
 a single, non-JOIN table reference.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/tair/sql/expression/SubqueryExpression.html#SubqueryExpression(org.tair.sql.expression.IExpression, java.lang.String, java.lang.String)">SubqueryExpression</A></B>(<A HREF="../../../../org/tair/sql/expression/IExpression.html" title="interface in org.tair.sql.expression">IExpression</A>&nbsp;expression,
                   java.lang.String&nbsp;table,
                   java.lang.String&nbsp;correlationName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Create a SubqueryExpression object with a single SELECT-list expression, a
 single table name, and a correlation name for the table.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/tair/sql/expression/SubqueryExpression.html#addExpressionToSelect(org.tair.sql.expression.ISelectExpression)">addExpressionToSelect</A></B>(<A HREF="../../../../org/tair/sql/expression/ISelectExpression.html" title="interface in org.tair.sql.expression">ISelectExpression</A>&lt;?&gt;&nbsp;expression)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Add a SQL expression to the list of expressions currently making up the
 SELECT clause of the SQL query.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/tair/sql/expression/SubqueryExpression.html#addPredicateToWhere(org.tair.sql.predicate.Predicate)">addPredicateToWhere</A></B>(<A HREF="../../../../org/tair/sql/predicate/Predicate.html" title="class in org.tair.sql.predicate">Predicate</A>&nbsp;predicate)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Add a predicate to the current predicate making up the WHERE clause of the
 SQL statement.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/tair/sql/expression/SubqueryExpression.html#addTableToFrom(java.lang.String, java.lang.String, org.tair.sql.predicate.Predicate)">addTableToFrom</A></B>(java.lang.String&nbsp;table,
               java.lang.String&nbsp;correlationName,
               <A HREF="../../../../org/tair/sql/predicate/Predicate.html" title="class in org.tair.sql.predicate">Predicate</A>&nbsp;on)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Add a table expression to the ordered list of table expressions currently
 in the from clause using a JOIN operator with an ON clause; the table
 expression consists of the table name or SELECT statement in parentheses,
 an alias, and an optional ON clause predicate.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/tair/sql/expression/SubqueryExpression.html#generateSelectClause(java.lang.StringBuilder)">generateSelectClause</A></B>(java.lang.StringBuilder&nbsp;builder)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Generate the SELECT clause with a list of all the expressions.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/tair/sql/expression/SubqueryExpression.html#getFrom()">getFrom</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the FROM clause of the subquery as a String.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/tair/sql/expression/SubqueryExpression.html#getSelect()">getSelect</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the SELECT clause of the subquery as a String.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/tair/sql/expression/SubqueryExpression.html#getSql(java.lang.StringBuilder)">getSql</A></B>(java.lang.StringBuilder&nbsp;builder)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Append the SQL expression into the string builder.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/tair/sql/expression/SubqueryExpression.html#getSqlWithoutParens(java.lang.StringBuilder)">getSqlWithoutParens</A></B>(java.lang.StringBuilder&nbsp;builder)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the subquery SQL without the parentheses, enabling a subclass to get
 the SQL for a standalone SQL SELECT.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/tair/sql/expression/SubqueryExpression.html#getWhere()">getWhere</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the WHERE clause of the subquery as a String.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.tair.sql.expression.Expression"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.tair.sql.expression.<A HREF="../../../../org/tair/sql/expression/Expression.html" title="class in org.tair.sql.expression">Expression</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/tair/sql/expression/Expression.html#getExpression()">getExpression</A>, <A HREF="../../../../org/tair/sql/expression/Expression.html#getLexicalVariables()">getLexicalVariables</A>, <A HREF="../../../../org/tair/sql/expression/Expression.html#getVariable(java.lang.String)">getVariable</A>, <A HREF="../../../../org/tair/sql/expression/Expression.html#setVariable(java.lang.String, java.lang.String)">setVariable</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.Object</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.tair.sql.expression.IExpression"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from interface org.tair.sql.expression.<A HREF="../../../../org/tair/sql/expression/IExpression.html" title="interface in org.tair.sql.expression">IExpression</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/tair/sql/expression/IExpression.html#getExpression()">getExpression</A>, <A HREF="../../../../org/tair/sql/expression/IExpression.html#getLexicalVariables()">getLexicalVariables</A>, <A HREF="../../../../org/tair/sql/expression/IExpression.html#getVariable(java.lang.String)">getVariable</A>, <A HREF="../../../../org/tair/sql/expression/IExpression.html#setVariable(java.lang.String, java.lang.String)">setVariable</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Field Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="select"><!-- --></A><H3>
select</H3>
<PRE>
private final java.util.List&lt;<A HREF="../../../../org/tair/sql/expression/IExpression.html" title="interface in org.tair.sql.expression">IExpression</A>&gt; <B>select</B></PRE>
<DL>
<DD>the list of expressions in the SELECT list
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="from"><!-- --></A><H3>
from</H3>
<PRE>
private <A HREF="../../../../org/tair/sql/table/TableReference.html" title="class in org.tair.sql.table">TableReference</A> <B>from</B></PRE>
<DL>
<DD>the table reference that constitutes the FROM clause
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="where"><!-- --></A><H3>
where</H3>
<PRE>
private <A HREF="../../../../org/tair/sql/predicate/Predicate.html" title="class in org.tair.sql.predicate">Predicate</A> <B>where</B></PRE>
<DL>
<DD>the search condition that constitutes the WHERE clause
<P>
<DL>
</DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="SubqueryExpression()"><!-- --></A><H3>
SubqueryExpression</H3>
<PRE>
protected <B>SubqueryExpression</B>()</PRE>
<DL>
<DD>Create a SubqueryExpression object. This is the default constructor; you
 use this when a concrete subclass builds a subquery by a static string
 variable or some other mechanism that does not require inputs to
 construction
<P>
</DL>
<HR>

<A NAME="SubqueryExpression(org.tair.sql.expression.IExpression, java.lang.String)"><!-- --></A><H3>
SubqueryExpression</H3>
<PRE>
public <B>SubqueryExpression</B>(<A HREF="../../../../org/tair/sql/expression/IExpression.html" title="interface in org.tair.sql.expression">IExpression</A>&nbsp;expression,
                          java.lang.String&nbsp;table)</PRE>
<DL>
<DD>Create a SubqueryExpression object with a single SELECT-list expression and
 a single, non-JOIN table reference. Use this constructor for subqueries of
 a single table.
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>expression</CODE> - the first expression in the SELECT list being composed<DD><CODE>table</CODE> - the first table in the FROM clause being composed</DL>
</DL>
<HR>

<A NAME="SubqueryExpression(org.tair.sql.expression.IExpression, java.lang.String, java.lang.String)"><!-- --></A><H3>
SubqueryExpression</H3>
<PRE>
public <B>SubqueryExpression</B>(<A HREF="../../../../org/tair/sql/expression/IExpression.html" title="interface in org.tair.sql.expression">IExpression</A>&nbsp;expression,
                          java.lang.String&nbsp;table,
                          java.lang.String&nbsp;correlationName)</PRE>
<DL>
<DD>Create a SubqueryExpression object with a single SELECT-list expression, a
 single table name, and a correlation name for the table. Use this
 constructor for JOIN subqueries.
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>expression</CODE> - the first expression in the SELECT list being composed<DD><CODE>table</CODE> - the first table in the FROM clause being composed<DD><CODE>correlationName</CODE> - the optional alias for the table; if null, you
          cannot add more tables to the from clause, each of which requires
          a unique alias</DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="addExpressionToSelect(org.tair.sql.expression.ISelectExpression)"><!-- --></A><H3>
addExpressionToSelect</H3>
<PRE>
public void <B>addExpressionToSelect</B>(<A HREF="../../../../org/tair/sql/expression/ISelectExpression.html" title="interface in org.tair.sql.expression">ISelectExpression</A>&lt;?&gt;&nbsp;expression)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../../org/tair/sql/expression/ISubqueryExpression.html#addExpressionToSelect(org.tair.sql.expression.ISelectExpression)">ISubqueryExpression</A></CODE></B></DD>
<DD>Add a SQL expression to the list of expressions currently making up the
 SELECT clause of the SQL query.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/tair/sql/expression/ISubqueryExpression.html#addExpressionToSelect(org.tair.sql.expression.ISelectExpression)">addExpressionToSelect</A></CODE> in interface <CODE><A HREF="../../../../org/tair/sql/expression/ISubqueryExpression.html" title="interface in org.tair.sql.expression">ISubqueryExpression</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>expression</CODE> - the expression of a specific type to add to the SELECT
          list clause</DL>
</DD>
</DL>
<HR>

<A NAME="addPredicateToWhere(org.tair.sql.predicate.Predicate)"><!-- --></A><H3>
addPredicateToWhere</H3>
<PRE>
public void <B>addPredicateToWhere</B>(<A HREF="../../../../org/tair/sql/predicate/Predicate.html" title="class in org.tair.sql.predicate">Predicate</A>&nbsp;predicate)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../../org/tair/sql/expression/ISubqueryExpression.html#addPredicateToWhere(org.tair.sql.predicate.Predicate)">ISubqueryExpression</A></CODE></B></DD>
<DD>Add a predicate to the current predicate making up the WHERE clause of the
 SQL statement. If the current predicate is null, this method sets it to the
 specified predicate; if the current predicate is not null, then this method
 adds the predicate by combining it with the current predicate with an AND
 relational operator.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/tair/sql/expression/ISubqueryExpression.html#addPredicateToWhere(org.tair.sql.predicate.Predicate)">addPredicateToWhere</A></CODE> in interface <CODE><A HREF="../../../../org/tair/sql/expression/ISubqueryExpression.html" title="interface in org.tair.sql.expression">ISubqueryExpression</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>predicate</CODE> - the predicate to add to the WHERE clause</DL>
</DD>
</DL>
<HR>

<A NAME="addTableToFrom(java.lang.String, java.lang.String, org.tair.sql.predicate.Predicate)"><!-- --></A><H3>
addTableToFrom</H3>
<PRE>
public void <B>addTableToFrom</B>(java.lang.String&nbsp;table,
                           java.lang.String&nbsp;correlationName,
                           <A HREF="../../../../org/tair/sql/predicate/Predicate.html" title="class in org.tair.sql.predicate">Predicate</A>&nbsp;on)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../../org/tair/sql/expression/ISubqueryExpression.html#addTableToFrom(java.lang.String, java.lang.String, org.tair.sql.predicate.Predicate)">ISubqueryExpression</A></CODE></B></DD>
<DD>Add a table expression to the ordered list of table expressions currently
 in the from clause using a JOIN operator with an ON clause; the table
 expression consists of the table name or SELECT statement in parentheses,
 an alias, and an optional ON clause predicate. There will always be an
 existing table in the SQL statement created with the constructor. If that
 table does not have an alias, this method returns a RuntimeException
 (single-table query).
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/tair/sql/expression/ISubqueryExpression.html#addTableToFrom(java.lang.String, java.lang.String, org.tair.sql.predicate.Predicate)">addTableToFrom</A></CODE> in interface <CODE><A HREF="../../../../org/tair/sql/expression/ISubqueryExpression.html" title="interface in org.tair.sql.expression">ISubqueryExpression</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>table</CODE> - the name of a table or a complete SQL statement in parentheses
          that returns a table of data<DD><CODE>correlationName</CODE> - the correlation name for the table expression<DD><CODE>on</CODE> - the ON clause predicate that relates the newly JOINed table to a
          previously JOINed table; if this value is null, this must be the
          first table in the FROM clause</DL>
</DD>
</DL>
<HR>

<A NAME="getSelect()"><!-- --></A><H3>
getSelect</H3>
<PRE>
public java.lang.String <B>getSelect</B>()</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../../org/tair/sql/expression/ISubqueryExpression.html#getSelect()">ISubqueryExpression</A></CODE></B></DD>
<DD>Get the SELECT clause of the subquery as a String.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/tair/sql/expression/ISubqueryExpression.html#getSelect()">getSelect</A></CODE> in interface <CODE><A HREF="../../../../org/tair/sql/expression/ISubqueryExpression.html" title="interface in org.tair.sql.expression">ISubqueryExpression</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the SELECT clause</DL>
</DD>
</DL>
<HR>

<A NAME="generateSelectClause(java.lang.StringBuilder)"><!-- --></A><H3>
generateSelectClause</H3>
<PRE>
private void <B>generateSelectClause</B>(java.lang.StringBuilder&nbsp;builder)</PRE>
<DL>
<DD>Generate the SELECT clause with a list of all the expressions.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>builder</CODE> - the string builder to which to append the SELECT clause</DL>
</DD>
</DL>
<HR>

<A NAME="getFrom()"><!-- --></A><H3>
getFrom</H3>
<PRE>
public java.lang.String <B>getFrom</B>()</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../../org/tair/sql/expression/ISubqueryExpression.html#getFrom()">ISubqueryExpression</A></CODE></B></DD>
<DD>Get the FROM clause of the subquery as a String.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/tair/sql/expression/ISubqueryExpression.html#getFrom()">getFrom</A></CODE> in interface <CODE><A HREF="../../../../org/tair/sql/expression/ISubqueryExpression.html" title="interface in org.tair.sql.expression">ISubqueryExpression</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the FROM clause</DL>
</DD>
</DL>
<HR>

<A NAME="getWhere()"><!-- --></A><H3>
getWhere</H3>
<PRE>
public java.lang.String <B>getWhere</B>()</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../../org/tair/sql/expression/ISubqueryExpression.html#getWhere()">ISubqueryExpression</A></CODE></B></DD>
<DD>Get the WHERE clause of the subquery as a String.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/tair/sql/expression/ISubqueryExpression.html#getWhere()">getWhere</A></CODE> in interface <CODE><A HREF="../../../../org/tair/sql/expression/ISubqueryExpression.html" title="interface in org.tair.sql.expression">ISubqueryExpression</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the WHERE clause</DL>
</DD>
</DL>
<HR>

<A NAME="getSql(java.lang.StringBuilder)"><!-- --></A><H3>
getSql</H3>
<PRE>
public void <B>getSql</B>(java.lang.StringBuilder&nbsp;builder)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../../org/tair/sql/expression/IExpression.html#getSql(java.lang.StringBuilder)">IExpression</A></CODE></B></DD>
<DD>Append the SQL expression into the string builder.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/tair/sql/expression/IExpression.html#getSql(java.lang.StringBuilder)">getSql</A></CODE> in interface <CODE><A HREF="../../../../org/tair/sql/expression/IExpression.html" title="interface in org.tair.sql.expression">IExpression</A></CODE><DT><B>Overrides:</B><DD><CODE><A HREF="../../../../org/tair/sql/expression/Expression.html#getSql(java.lang.StringBuilder)">getSql</A></CODE> in class <CODE><A HREF="../../../../org/tair/sql/expression/Expression.html" title="class in org.tair.sql.expression">Expression</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>builder</CODE> - the string builder into which to append the elements of the
          SQL expression; the builder may already contain the preceding part
          of the SQL statement</DL>
</DD>
</DL>
<HR>

<A NAME="getSqlWithoutParens(java.lang.StringBuilder)"><!-- --></A><H3>
getSqlWithoutParens</H3>
<PRE>
public void <B>getSqlWithoutParens</B>(java.lang.StringBuilder&nbsp;builder)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../../org/tair/sql/expression/ISubqueryExpression.html#getSqlWithoutParens(java.lang.StringBuilder)">ISubqueryExpression</A></CODE></B></DD>
<DD>Get the subquery SQL without the parentheses, enabling a subclass to get
 the SQL for a standalone SQL SELECT.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/tair/sql/expression/ISubqueryExpression.html#getSqlWithoutParens(java.lang.StringBuilder)">getSqlWithoutParens</A></CODE> in interface <CODE><A HREF="../../../../org/tair/sql/expression/ISubqueryExpression.html" title="interface in org.tair.sql.expression">ISubqueryExpression</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>builder</CODE> - the builder to which to add the SQL</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/SubqueryExpression.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/tair/sql/expression/StringSubqueryExpression.html" title="class in org.tair.sql.expression"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/tair/sql/expression/TimestampExpression.html" title="class in org.tair.sql.expression"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/tair/sql/expression/SubqueryExpression.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SubqueryExpression.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
